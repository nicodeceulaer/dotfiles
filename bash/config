export EDITOR="vim"

case "${TERM}" in
  "xterm-256color")
     TITLEBAR='\[\033]0;\u@\h > ${PWD}\007\]'
     PS1="${TITLEBAR}\[\e[1;32m\][\[\e[0;36m\]\u\[\e[1;32m\]@\[\e[1;33m\]\h\[\e[1;32m\]] \[\e[0;37m\]\${NEW_PWD}/ \[\e[1;32m\]\$ \[\e[0m\]"
     ;;
  "screen")
     TITLEBAR='\033_\u@\h > ${PWD}\033\\'
     ESC='\[\ek\]\[\e\\\]'
     PS1="\[\e[1;32m\][\[\e[0;36m\]\u\[\e[1;32m\]] \[\e[0;37m\]\${NEW_PWD}/ \[\e[1;32m\]\$\[\e[0m\] ${ESC}"
     ;;
  *)
     PS1="\[\e[1;32m\][\[\e[0;36m\]\u\[\e[1;32m\]@\[\e[1;33m\]\h\[\e[1;32m\]] \[\e[0;37m\]\${NEW_PWD}/ \[\e[1;32m\]\$ \[\e[0m\]"
     ;;
esac

##################################################
# Fancy PWD display function
##################################################
# The home directory (HOME) is replaced with a ~
# The last pwdmaxlen characters of the PWD are displayed
# Leading partial directory names are striped off
# /home/me/stuff          -> ~/stuff               if USER=me
# /usr/share/big_dir_name -> ../share/big_dir_name if pwdmaxlen=20
##################################################
bash_prompt_command() {
    # How many characters of the $PWD should be kept
    local pwdmaxlen=30
    # Indicate that there has been dir truncation
    local trunc_symbol=".."
    local dir=${PWD##*/}
    pwdmaxlen=$(( ( pwdmaxlen < ${#dir} ) ? ${#dir} : pwdmaxlen ))
    NEW_PWD=${PWD/#$HOME/\~}
    local pwdoffset=$(( ${#NEW_PWD} - pwdmaxlen ))
    if [ ${pwdoffset} -gt "0" ]
    then
        NEW_PWD=${NEW_PWD:$pwdoffset:$pwdmaxlen}
        NEW_PWD=${trunc_symbol}/${NEW_PWD#*/}
    fi
    
#    # handle history acros multiple instances a bit more elegantly
#    history -n  # reread history from disk
#    history -a  # append recent commands to history file on disk
}

bash_prompt() {
    case $TERM in
     xterm*|rxvt*)
         local TITLEBAR='\[\033]0;\u@\h ${NEW_PWD}\007\]'
          ;;
     *)
         local TITLEBAR=""
          ;;
    esac
    local NONE="\[\033[0m\]"    # unsets color to term's fg color
    
    # regular colors
    local K="\[\033[0;30m\]"    # black
    local R="\[\033[0;31m\]"    # red
    local G="\[\033[0;32m\]"    # green
    local Y="\[\033[0;33m\]"    # yellow
    local B="\[\033[0;34m\]"    # blue
    local M="\[\033[0;35m\]"    # magenta
    local C="\[\033[0;36m\]"    # cyan
    local W="\[\033[0;37m\]"    # white
    
    # emphasized (bolded) colors
    local EMK="\[\033[1;30m\]"
    local EMR="\[\033[1;31m\]"
    local EMG="\[\033[1;32m\]"
    local EMY="\[\033[1;33m\]"
    local EMB="\[\033[1;34m\]"
    local EMM="\[\033[1;35m\]"
    local EMC="\[\033[1;36m\]"
    local EMW="\[\033[1;37m\]"
    
    # background colors
    local BGK="\[\033[40m\]"
    local BGR="\[\033[41m\]"
    local BGG="\[\033[42m\]"
    local BGY="\[\033[43m\]"
    local BGB="\[\033[44m\]"
    local BGM="\[\033[45m\]"
    local BGC="\[\033[46m\]"
    local BGW="\[\033[47m\]"
    
    local UC=$C                   # user's color
    [ $UID -eq "0" ] && UC=$EMR   # root's color
    
    PS1="${TITLEBAR}\[\e[1;32m\][\[\e[0;36m\]\u\[\e[1;32m\]@\[\e[1;33m\]\h\[\e[1;32m\]] \[\e[0;37m\]\${NEW_PWD}/ \[\e[1;32m\]\$ \[\e[0m\]"
    PS1="${TITLEBAR}${EMG}[${UC}\u${EMG}@${UC}\h ${EMY}\${NEW_PWD}${EMG}]${UC}\\$ ${NONE}"

    export WORKAREA="."
    PS1='$(if [[ $? == 0 ]]; then echo -e "\[\033[0;32m\]\xE2\x9C\x94"; else echo -e "\[\033[0;31m\]\xE2\x9C\x95"; fi )\[\033[0m\] $(date +%R) \[\033[1;34m\]($(basename $WORKAREA))\[\033[0m\] \u@\[\033[1;33m\]$(echo \h | sed s/beqbrgbrg[0-9]//i)\[\033[0m\]:\[\033[0;31m\]\w\[\033[0m\]\$ '

    # without colors: PS1="[\u@\h \${NEW_PWD}]\\$ "
    # extra backslash in front of \$ to make bash colorize the prompt
}

PROMPT_COMMAND=bash_prompt_command
bash_prompt
unset bash_prompt

# History ----------------------------------------------------------
export HISTCONTROL=ignoredups:ignorespace
shopt -s histappend
export HISTSIZE=1000
export HISTFILESIZE=3000
export HISTIGNORE="ls:cd:[bf]g:exit:..:...:ll:lla"
alias h=history

hg(){
   history | grep "$@"
}
